@using SyncNotes.Client
@using Microsoft.AspNetCore.Components.Authorization
@using SyncNotes.Client.Services
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@inject AuthService AuthService

<nav class="app-navbar">
    <div class="container">
        <div class="navbar-content">
            <div class="navbar-brand">
                <a href="/" class="brand-link">SyncNotes</a>
                <button class="navbar-toggler" @onclick="ToggleNavMenu">
                    <i class="bi bi-list"></i>
                </button>
            </div>
            
            <div class="navbar-menu @(collapseNavMenu ? "" : "show")">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                            <i class="bi bi-house-door"></i> Home
                        </NavLink>
                    </li>
                    <AuthorizeView>
                        <Authorized>
                            <li class="nav-item">
                                <NavLink class="nav-link" href="/notes">
                                    <i class="bi bi-pencil-square"></i> Notes
                                </NavLink>
                            </li>
                            <li class="nav-item">
                                <NavLink class="nav-link" href="/whiteboard">
                                    <i class="bi bi-easel"></i> Whiteboard
                                </NavLink>
                            </li>
                            <li class="nav-item">
                                <NavLink class="nav-link" href="/friends">
                                    <i class="bi bi-people"></i> Friends
                                </NavLink>
                            </li>
                        </Authorized>
                    </AuthorizeView>
                </ul>
                
                <ul class="navbar-nav navbar-nav-right">
                    <AuthorizeView>
                        <Authorized>
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" @onclick="ToggleUserDropdown">
                                    <i class="bi bi-person-circle"></i>
                                    <span>@context.User.Identity?.Name</span>
                                </a>
                                <ul class="dropdown-menu @(showUserDropdown ? "show" : "")">
                                    <li><span class="dropdown-item status-item"><i class="bi bi-check-circle-fill text-success"></i> Logged in</span></li>
                                    <li><hr class="dropdown-divider" /></li>
                                    <li><button class="dropdown-item" @onclick="HandleLogout"><i class="bi bi-box-arrow-right"></i> Logout</button></li>
                                </ul>
                            </li>
                        </Authorized>
                        <NotAuthorized>
                            <li class="nav-item">
                                <a href="/login" class="nav-link">
                                    <i class="bi bi-box-arrow-in-right"></i> Login
                                </a>
                            </li>
                            <li class="nav-item">
                                <a href="/register" class="nav-link">
                                    <i class="bi bi-person-plus"></i> Register
                                </a>
                            </li>
                        </NotAuthorized>
                    </AuthorizeView>
                </ul>
            </div>
        </div>
    </div>
</nav>

@code {
    private bool collapseNavMenu = true;
    private bool showUserDropdown = false;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
        showUserDropdown = false;
    }

    private void ToggleUserDropdown()
    {
        showUserDropdown = !showUserDropdown;
    }

    private async Task HandleLogout()
    {
        
        
        await AuthService.Logout();
    }
}